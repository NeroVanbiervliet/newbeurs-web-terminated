/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.47
 * Generated at: 2015-09-01 18:06:19 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.io.*;
import java.util.*;
import java.sql.*;
import supportClasses.DatabaseInteraction;
import supportClasses.QueryResult;
import supportClasses.QueryResult;
import java.sql.Date;
import supportClasses.DatabaseInteraction;
import supportClasses.OakDatabaseException;

public final class initiate_005fsimulation_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/import.jsp", Long.valueOf(1440931024000L));
    _jspx_dependants.put("/login_checker.jsp", Long.valueOf(1441008043000L));
  }

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\n");
      out.write("<!-- at compile time -->\n");
      out.write('\n');
      out.write('\n');
      out.write("\n");
      out.write("\n");
      out.write("<html>\n");
      out.write("\t<!-- check for logged in user -->\n");
      out.write("\t<!-- at compile time -->\n");
      out.write("\t");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");


// login expiry time NEED verlagen
int milliSecondsTillLoginExpired = 10000000;

request.getSession().setAttribute("loginStatus", "failed");

// check if there is a post request
String postOrigin = request.getParameter("postOrigin");
if(postOrigin == null)
{
	// no post request
	// check if login is not expired
	Object loggedInTimestamp = request.getSession().getAttribute("loggedInTimestamp");
	if(loggedInTimestamp != null)
	{
		long timeSinceLogin = (System.currentTimeMillis() % 1000 ) - (Long) loggedInTimestamp;
		
		if(timeSinceLogin > milliSecondsTillLoginExpired)
		{
			// the previous login is expired, new login is required
			request.getSession().setAttribute("loginStatus", "expired");
		}
		else // login is still valid
		{
			request.getSession().setAttribute("loginStatus", "succeeded");
		}
	}
	else
	{
		// a fresh, first time login is required
		request.getSession().setAttribute("loginStatus", "fresh");
	}
}
else if(postOrigin.equals("login_form"))
{
	String account = request.getParameter("account");
	String password = request.getParameter("password");
	
	// NEED account aanpassen naar webapp, python acc moet python worden
	DatabaseInteraction dbInt = new DatabaseInteraction("backtest_real");
	
	boolean isCorrect;
	try 
	{
		isCorrect = dbInt.isCorrectPassword(account, password);
	} 
	catch (OakDatabaseException e) // usernaam is niet gevonden in de database
	{
		isCorrect = false;
	}
	
	// session variables setten
	if(isCorrect)
	{
		request.getSession().setAttribute("loggedInUserName", account);
		
		QueryResult queryResult = dbInt.getUserInfo(account);
		String userId = queryResult.iterator().next().get("id").toString();
		
		request.getSession().setAttribute("loggedInUserId", userId);
		
		request.getSession().setAttribute("loggedInTimestamp", System.currentTimeMillis() % 1000);
		request.getSession().setAttribute("loginStatus", "succeeded");
	}
	else // login failed
	{
		request.getSession().removeAttribute("loggedInUserName");
		request.getSession().removeAttribute("loggedInUserId");
		request.getSession().removeAttribute("loggedInTimestamp");
		request.getSession().setAttribute("loginStatus", "failed");
	}
	
}


      out.write("\n");
      out.write("\t\n");
      out.write("\t<!--  TODO form resubmission http://stackoverflow.com/questions/3923904/preventing-form-resubmission -->\n");
      out.write("\t");
 	String loginStatus = (String) request.getSession().getAttribute("loginStatus");
		if(!loginStatus.equals("succeeded")){ 
      out.write('\n');
      out.write('	');
      out.write('	');
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "login_form.jsp" + "?" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("loginStatus", request.getCharacterEncoding())+ "=" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${loginStatus}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false), request.getCharacterEncoding()), out, false);
      out.write('\n');
      out.write('	');
} 
		else // logInStatus is succeeded
		{
      out.write("\n");
      out.write("\t\t\n");
      out.write("\t\t<!-- main content of page -->\n");
      out.write("\t\t<head>\n");
      out.write("\t\t\t<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n");
      out.write("\t\t\t<title>Adjust title!</title>\n");
      out.write("\t\t\t<!-- vervangen door lokale jquery (er staat al één in WEB-INF -->\n");
      out.write("\t\t\t<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/1.11.3/jquery.min.js\"></script>\n");
      out.write("\t\t\t<script>\t\t\t\n");
      out.write("\t\t\t\tfunction updateInfo()\n");
      out.write("\t\t\t\t{\n");
      out.write("\t\t\t\t\tvar strategyId = document.getElementById(\"strategySelector\").value-1;\n");
      out.write("\t\t\t\t\tvar infoToShow = strategyInfo[strategyId];\n");
      out.write("\t\t\t\t\tdocument.getElementById(\"strategyInfoBox\").value = infoToShow;\n");
      out.write("\t\t\t\t}\n");
      out.write("\t\t\t\t\n");
      out.write("\t\t\t\t// add event handler to form\n");
      out.write("\t\t\t\t$( \"#simulationForm\" ).submit(function(event){\n");
      out.write("\t\t\t\t\t \n");
      out.write("\t\t\t\t\t// Stop form from submitting normally\n");
      out.write("\t\t\t\t\tevent.preventDefault();\n");
      out.write("\t\t\t\t\t\n");
      out.write("\t\t\t\t\tvar data = $('simulationForm').serialize();\n");
      out.write("\t\t\t\t\t\n");
      out.write("\t\t\t\t\t// Send the data using post\n");
      out.write("\t\t\t\t\t$.post('launch_simulation.jsp', data,function(result){\n");
      out.write("\t\t\t            $(\"#ajaxResult\").html(result);\n");
      out.write("\t\t\t            alert(\"ding\");\n");
      out.write("\t\t\t        });\n");
      out.write("\t\t\t\t\t\n");
      out.write("\t\t\t\t\t\n");
      out.write("\t\t\t\t});\n");
      out.write("\t\t\t\t\n");
      out.write("\t\t\t</script>\n");
      out.write("\t\t</head>\n");
      out.write("\t\t<body onload=\"updateInfo()\">\n");
      out.write("\t\t\t<!-- at runtime -->\n");
      out.write("\t\t\t");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "header.jsp", out, false);
      out.write("\n");
      out.write("\t\t\t\n");
      out.write("\t\t\t<!-- at runtime TODO compile time van maken?  -->\n");
      out.write("\t\t\t");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "navigation.html", out, false);
      out.write("\n");
      out.write("\t\t\t\n");
      out.write("\t\t\t<form action=\".\" id=\"simulationForm\">\n");
      out.write("\t\t\t\t<p>\n");
      out.write("\t\t\t\t\t<label for=\"simulationName\">Simulation name</label>\n");
      out.write("\t\t\t\t\t<input type=\"text\" name=\"simulationName\">\n");
      out.write("\t\t\t\t</p>\n");
      out.write("\t\t\t\t\n");
      out.write("\t\t\t\t<p>\n");
      out.write("\t\t\t\t\t<label for=\"simulationDescription\">Description</label>\n");
      out.write("\t\t\t\t\t<input type=\"text\" name=\"description\">\n");
      out.write("\t\t\t\t</p>\n");
      out.write("\t\t\t\t\n");
      out.write("\t\t\t\t<!-- build up array containing strategy descriptions -->\n");
      out.write("\t\t\t\t<script>\n");
      out.write("\t\t\t\t\t");
 
						// NEED root vervangen door webapp
						DatabaseInteraction dbInt = new DatabaseInteraction("backtest_real","root");
						QueryResult queryResult = dbInt.getAllTableEntries("strategy LEFT JOIN method ON strategy.method=method.id");
												
						// verbetering mogelijk
						// geklooi hieronder is omdat ik niet zeker ben dat bij for each over queryResult hij wel in volgorde van id overloopt	
							
						int numOfStrategies = queryResult.getNumOfEntries();
						String[] strategyDescriptions = new String[numOfStrategies];
						
						int index;
								
						for(HashMap<String,Object> strategy : queryResult)
						{
							// index is 1 minder dan id want index van array telt vanaf 0, id vanaf 1
							index = Integer.parseInt(strategy.get("id").toString())-1;
							strategyDescriptions[index] = strategy.get("description").toString();
						}
						
						// javascript array schrijven
						out.write("var strategyInfo = [");
						for(String description : strategyDescriptions)
						{
							out.write(String.format("\"%s\",",description));
						}
						// TODO laatste komma weghalen die na de laatste description wordt geprint
						out.write("];");
					
      out.write("\n");
      out.write("\t\t\t\t</script>\n");
      out.write("\t\t\t\t\n");
      out.write("\t\t\t\t<p>\n");
      out.write("\t\t\t\t\t\n");
      out.write("\t\t\t\t\t\n");
      out.write("\t\t\t\t\t<label for=\"strategy\">Strategy</label>\n");
      out.write("\t\t\t\t\t<select id=\"strategySelector\" onchange=\"updateInfo()\" name=\"strategy\">\n");
      out.write("\t\t\t\t\t");
 	
						// queryResult object already created in above code between script tags
						queryResult = dbInt.getAllTableEntries("strategy");
							
						for(HashMap<String,Object> strategy : queryResult)
						{
							// <option value="first_script.py">first_script.py</option>
							out.write(String.format("<option value=\"%s\">%s</option>",strategy.get("id"),strategy.get("name")));	
						}
					
      out.write("\n");
      out.write("\t\t\t\t\t</select>\n");
      out.write("\t\t\t\t</p>\t\n");
      out.write("\t\t\t\t\n");
      out.write("\t\t\t\t<p>\n");
      out.write("\t\t\t\t\t<label for=\"strategyInfoBox\">Strategy readme</label>\n");
      out.write("\t\t\t\t\t<textarea id=\"strategyInfoBox\" readonly></textarea>\n");
      out.write("\t\t\t\t</p>\n");
      out.write("\t\t\t\t\n");
      out.write("\t\t\t\t<p class=\"submit\">\t\t\t\n");
      out.write("\t\t\t\t\t<input type=\"submit\" value=\"initiate simulation\">\n");
      out.write("\t\t\t\t</p>\n");
      out.write("\t\t\t</form>\n");
      out.write("\t\t\t<div id=\"ajaxResult\"></div>\n");
      out.write("\t\t</body>\n");
      out.write("\t\t\n");
      out.write("\t");
} 
      out.write("\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
